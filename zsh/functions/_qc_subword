# Modified from https://github.com/marlonrichert/zsh-edit

emulate -L zsh; setopt extended_glob no_listbeep no_shortloops warn_create_global
local -i move=0

if [[ $WIDGET == *kill-* ]] {
    zle -f kill
    if (( REGION_ACTIVE )) {
        zle .kill-region
        return
    }
}

if [[ $WIDGET == *-shellword ]] {
    local w=
    if [[ $WIDGET == backward* ]] {
        local -a words=( ${${(z)LBUFFER}:#\;} )
        while [[ -z $w && $#words[@] -gt 0 ]] {
            w=${(M)LBUFFER%$words[-1]*}
            shift -p words
        }
        move=-$#w
    } else {
        # We can't split $RBUFFER on words, because that usually doesn't parse correctly.
        local -a words=( ${${(z)BUFFER}:#\;} ) lwords=( ${${(z)LBUFFER}:#\;} )
        words=( $words[$#lwords[@],-1] )
        words[1]=${words[1]#$lwords[-1]}
        while [[ -z $w && $#words[@] -gt 0 ]] {
            w=${(M)RBUFFER#*$words[1]}
            shift words
        }
        move=+$#w
    }
} else {
    local wordchars
    zstyle -s ":edit:$WIDGET:" word-chars wordchars &&
        local +h WORDCHARS="$wordchars"
    local subword='([[:WORD:]]##~*[^[:upper:]]*[[:upper:]]*~*[[:alnum:]]*[^[:alnum:]]*)'
    local word="(${subword}|[^[:WORD:][:space:]]##|[[:space:]]##)"
    if [[ $WIDGET == backward-* ]] {
        move=-${(M)#LBUFFER%%${~word}(?|)}
    } else {
        move=+${(M)#RBUFFER##(?|)${~word}}
    }
}

if [[ $WIDGET == *kill-* ]] {
    (( MARK = CURSOR + move ))
    zle .kill-region
} else {
    (( CURSOR += move ))
}

# # Star tmux
# # if (not in tmux) and (interactive env) and (not embedded terminal)
# [[ -z $TMUX && $- == *i* && ! $(</proc/$PPID/cmdline) =~ "dolphin|vim|emacs|code" ]] && tmux

# Internal functions
__source() {  # source if exist
    # -f: file exists and readable
    [[ -f $1 ]] && source "$1"
}
__bindkey() {  # poorman's bindkey
    # ^Q: push line
    bindkey -s $1 "^Q$2\n"
}

# Start p10k instant prompt
__source "$HOME/.cache/p10k-instant-prompt-${(%):-%n}.zsh"

# Load plugins
source "$HOME/.zinit/bin/zinit.zsh"
zinit for \
    OMZL::completion.zsh \
    OMZL::key-bindings.zsh \
    OMZL::clipboard.zsh \
    OMZP::sudo \
    OMZP::systemd \
    https://github.com/junegunn/fzf/blob/master/shell/key-bindings.zsh
zinit svn for \
    OMZP::extract \
    OMZP::pip
zinit as'completion' for \
    OMZP::ripgrep/_ripgrep \
    OMZP::cargo/_cargo \
    OMZP::rust/_rust \
    OMZP::rustup/_rustup \
    OMZP::docker/_docker \
    OMZP::docker-compose/_docker-compose
zinit light-mode depth'1' for \
    romkatv/powerlevel10k \
    Aloxaf/fzf-tab \
    zdharma/fast-syntax-highlighting \
    zsh-users/zsh-autosuggestions \
    zsh-users/zsh-history-substring-search \
    MichaelAquilina/zsh-you-should-use \
    MichaelAquilina/zsh-autoswitch-virtualenv \
    hlissner/zsh-autopair
zicompinit
zicdreplay

# Configure zsh misc
setopt auto_cd
setopt auto_pushd
setopt pushd_ignore_dups
setopt pushd_minus
setopt interactive_comments
setopt multios
setopt ksh_option_print
WORDCHARS='*?.[]~-_=&;!#$%^(){}<>'

# Configure zsh history
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_verify
setopt share_history
HISTFILE="$HOME/.zsh_history"
HISTSIZE=50000
SAVEHIST=10000

# Configure fzf
export FZF_DEFAULT_OPTS="--ansi --layout=reverse --bind=tab:accept"

# Configure fzf-tab
zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
zstyle ':fzf-tab:*' fzf-bindings 'tab:accept'
zstyle ':fzf-tab:complete:kill:argument-rest' fzf-preview 'ps --pid=$word -o cmd --no-headers -w -w'
zstyle ':fzf-tab:complete:kill:argument-rest' fzf-flags '--preview-window=down:3:wrap'
zstyle ':fzf-tab:complete:kill:*' popup-pad 0 3
zstyle ':completion:*:git-checkout:*' sort false

# Configure zsh-autoswitch-virtualenv
export AUTOSWITCH_VIRTUAL_ENV_DIR="virtualenv"

# Configure fast-syntax-highlighting
export FAST_HIGHLIGHT[chroma-man]=""  # chroma-man will stuck history browsing

# Configure bat
export BAT_THEME="OneHalfDark"

# Configure man-pages
export MANPAGER="sh -c 'col -bx | bat -l man -p --theme=\"Monokai Extended\"'"
export MANROFFOPT="-c"

# Configure npm
export NPM_CONFIG_PREFIX="$HOME/.local"
export NPM_CONFIG_CACHE="$HOME/.cache/npm"

# Key bindings
bindkey '^H' backward-kill-word  # [Ctrl-Backspace/H]
bindkey '^Z' undo  # [Ctrl-Z]
bindkey '^Y' redo  # [Ctrl-Y]
__bindkey '^N' 'cd "${$(xplr):-.}"'  # [Ctrl-N] run xplr to navigate

# Aliases
unalias zi zini zpl zplg  # from zinit
alias -g ...="../.."
alias -g ....="../../.."
alias -g .....="../../../.."
alias :q="exit"
alias l="exa -lah --group-directories-first --git --time-style=long-iso"
alias tree="exa -lahTI '.git' --group-directories-first --git --time-style=long-iso"
alias clc="clipcopy"  # from OMZL::clipboard.zsh
alias clp="clippaste"  # from OMZL::clipboard.zsh
alias sudo="sudo "
alias pc="proxychains -q "
alias with-proxy=' \
    TMP_PROXY=127.0.0.1:1999 \
    http_proxy=$TMP_PROXY \
    HTTP_PROXY=$TMP_PROXY \
    https_proxy=$TMP_PROXY \
    HTTPS_PROXY=$TMP_PROXY '

# Environment variables
export EDITOR="vim"
path=(  # no need to export
    "$HOME/.local/bin"
    "$HOME/.ghcup/bin"
    $path
)

# Directory shortcuts
hash -d config="$HOME/.config"
hash -d cache="$HOME/.cache"
hash -d Downloads="$HOME/Downloads"
hash -d Workspace="$HOME/Workspace"
hash -d Temp="$HOME/Workspace/Code/Temp"
hash -d NotMe="$HOME/Workspace/Code/NotMe"
hash -d QuarticCat="$HOME/Workspace/Code/QuarticCat"
hash -d Homework="$HOME/Workspace/Homework"

# My functions
git-stats() {  # too hard to write it as a git alias
    git shortlog -sn | \
    while read line; do
        read -d '\t' commits author <<< "$line"
        git log --author="$author" --pretty=tformat: --numstat | \
        awk '{ add += $1; subs += $2 } END { print add " " subs }' - | \
        read add subs
        echo -e "$author:\n  $commits commits, $add++, $subs--\n"
    done
}

# Load scripts
__source "$HOME/.cargo/env"
__source "$HOME/.opam/opam-init/init.zsh"
__source "$HOME/.p10k.zsh"
